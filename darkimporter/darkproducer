#!/usr/bin/env python
import sys
import requests
import redis
import time
import koji
import logging
from darkdaemon import Daemon

class DarkDaemon(Daemon):
    def run(self):
        """
        The daemon process
        """
        kojiurl="http://koji.fedoraproject.org/kojihub"
        kc = koji.ClientSession(kojiurl, {'debug': False, 'password': None,\
                            'debug_xmlrpc': False, 'user': None})
        idx = int(sys.argv[2])
        rdb = redis.Redis(host='localhost', port=6379, db=1)
        while True:
            try:
                res = kc.getBuild(idx)
                url = 'http://koji.fedoraproject.org/koji/buildinfo?buildID=%s' % idx
                if not res:
                    #We reached to the new build yet to start
                    #Time to sleep
                    self.logger.info("Sleeping with %s" % idx)
                    time.sleep(1)
                    continue
                if res['state'] == 1:
                    #completed build now push to our redis queue    
                    rdb.lpush("jobqueue",url)
                    self.logger.info("In job queue %s" % idx)
                    idx += 1
                    continue
    
                if res['state'] == 0:
                    #building state
                    rdb.lpush("buildqueue",url)
                    self.logger.info("In build queue %s" % idx)
                    idx += 1
                    continue
                else:
                    idx += 1
    
            except Exception as err:
                print err


if __name__ == '__main__':
    logging.basicConfig(filename='darkproducer.log', level=logging.INFO,
                        format='%(asctime)s:%(name)s:%(levelname)s:%(message)s')
    daemon = None 
    if len(sys.argv) >= 2:
        logger = logging.getLogger("producer")
        daemon = DarkDaemon('/tmp/darkproducer.pid', logger)
        if 'start' == sys.argv[1]:
            daemon.start()
        elif 'stop' == sys.argv[1]:
            daemon.stop()
        elif 'restart' == sys.argv[1]:
            daemon.restart()
        else:
            print "Unknown command"
            sys.exit(2)
        sys.exit(0)
    else:
        print "usage: %s start|stop|restart" % sys.argv[0]
        sys.exit(2)
